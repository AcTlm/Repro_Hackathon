###  HACKATHON TRAITELENt STAT 
###  Anne-cécile 
###  30/10/2022

## Packages -------------------- 

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install("DESeq2")

library( "DESeq2")
library("ggplot2")
library("readr")


#### documents d'aide pour le traitement ...........
#https://med.und.edu/research/genomics-core/_files/docs/deseq2-handout.pdf
#http://sthda.com/english/wiki/rna-seq-differential-expression-work-flow-using-deseq2#example-bam-files
#https://www.emilyzabor.com/tutorials/survival_analysis_in_r_tutorial.html#Packages

### data ----------------------

setwd("~/AMI2B/Hackathon/DESeq2_analyse_stat")
counts_db <- read.delim("count.txt",skip = 1)#
head(counts_db)
summary(counts_db)

annotation <- counts_db[,c(1:6)]
rownames(counts) <- counts$Geneid
counts <- counts_db[,-c(1:6)]
colnames(counts) <- gsub("Alignments\\.|_sorted.bam","",colnames(counts))

## treatment group-------------------
cellType <- c("SRR1","SRR2") ###ref and cancer??
sampleName <- paste(cellType,c(1:2),sep = "_")
colData <- data.frame(row.names = colnames(counts), cellType = cellType,sampleName = sampleName)
colData
cellType = as.factor(cellType)

###  combiner les reads & groupes ------------------

dds <- DESeqDataSetFromMatrix(countData = counts, design = ~ 1, colData = colData) ### ~ cellType
mcols(dds) <- DataFrame(annotation)
dds <- DESeq(dds,betaPrior = T)

#### check e normalization factors---------------
sizeFactors(dds)

#### dispersions plot ---------------------
plotDispEsts(dds)
## Each black dot in the plot represents the dispersion for one gene. The red line is fit to data (black bots),
##then the dispersions are squeezed toward the red line, resulting the final (blue) dispersion estimates. Usually,
##the dispersion is higest at the low counts and levels off at higher counts.

#### ANlayse of replication by group --------------
rld <- rlog(dds)  ## log of normalized counts 
plotPCA(rld,intgroup = "cellType") ## Principal Components Analyise by grpup cancer & human_ref ? 

#### Heatmap ----------------------
hmcol <- colorRampPalette(brewer.pal(9, 'GnBu'))(100)
dists <- dist(t(assay(rld)))
mat <- as.matrix(dists)
rownames(mat) <- colnames(mat) <- as.character(colData$sampleName)
hc <- hclust(dists)
heatmap(mat, Rowv=as.dendrogram(hc), symm=T, trace='none', col=rev(hmcol), margin=c(13,13), main='heatmap')

#### differential expression between treatment conditions ------------ 
# les deux samples correspodent à deux individus cancereurs , dans cette anlayse ils sont donc dans le memes conditions
# le graph sera developpé quand Ref _human sera intégré..
res <- results(dds)#,contrast = c("cellType","cancer","human"),alpha = 0.05)
summary(res)
hist( res$pvalue, breaks=20, col="grey" )
#Plot the counts of some of the top differentially expressed genes as a sanity check:
plotCounts(dds,gene = "Id4",intgroup = "cellType")
subset(res,grepl("Hox",rownames(res))) ## subset the results table to look at your favourite genes:

#### log2 Fold Changes as function of expression----------------
plotMA(res,alpha = 0.05)
abline(h=c(-2,2),col = "blue")



